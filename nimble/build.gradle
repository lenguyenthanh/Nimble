apply plugin: 'com.android.library'
apply from: '../code_quality_tools/jacoco.gradle'

def versionMajor = 0
def versionMinor = 5
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

ext {
  bintrayRepo = 'maven'
  bintrayName = 'android-nimble'

  publishedGroupId = 'com.lenguyenthanh.nimble'
  libraryName = 'nimble'
  artifact = 'nimble'

  libraryDescription = 'A small, quick and flexible Model-View-Presenter library for Android.'

  siteUrl = 'https://github.com/lenguyenthanh/nimble'
  gitUrl = 'https://github.com/lenguyenthanh/nimble.git'

  libraryVersion = "${versionMajor}.${versionMinor}.${versionPatch}"

  developerId = 'lenguyenthanh'
  developerName = 'Thanh Le'
  developerEmail = 'lenguyenthanh@hotmail.com'

  licenseName = 'The Apache Software License, Version 2.0'
  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  allLicenses = ["Apache-2.0"]
}

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.2"

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 23
    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    warningsAsErrors true
    abortOnError true // Fail early.
  }
  
  // This allows us see tests execution progress in the output on the CI.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
      exceptionFormat 'full'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

}

dependencies {
  compile 'com.android.support:support-annotations:23.2.0'

  testCompile 'junit:junit:4.12'
  testCompile 'com.google.truth:truth:0.28'
  testCompile 'org.mockito:mockito-all:1.10.19'
}

apply from: '../gradle/gradle-mvn-push.gradle'